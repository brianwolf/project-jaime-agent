# name: cicd

# on:
#   push:
#     branches: [main]

# jobs:

#   get-version:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#     - name: create-version
#       id: create-version
#       run: echo "::set-output name=version::$(date +%Y%m%d%H%M)"
#     - name: show-version
#       run: echo "Version to build -> ${{ steps.create-version.outputs.version }}"
#     outputs:
#       version: ${{ steps.create-version.outputs.version }}
  

#   build-and-push:
#     needs: get-version
#     runs-on: ubuntu-latest
#     steps:
#     - name: Check Out Repo 
#       uses: actions/checkout@v2
#     - name: Login to Docker Hub
#       uses: docker/login-action@v1
#       with:
#         username: ${{ secrets.DOCKER_USERNAME }}
#         password: ${{ secrets.DOCKER_TOKEN }}
#     - name: Build and push
#       id: docker_build
#       uses: docker/build-push-action@v2
#       with:
#         push: true
#         context: ./
#         file: ./Dockerfile
#         tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.APP_NAME }}:${{ needs.get-version.outputs.version }},${{ secrets.DOCKER_USERNAME }}/${{ secrets.APP_NAME }}:latest
#         platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8
#         build-args: ARG_VERSION=${{ needs.get-version.outputs.version }}
#     outputs:
#       version: ${{ needs.get-version.outputs.version }}
  

#   tag-branch:
#     needs: build-and-push
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#     - name: tag
#       id: tag
#       uses: actions/create-release@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         tag_name: ${{ needs.build-and-push.outputs.version }}
#     outputs:
#       version: ${{ needs.build-and-push.outputs.version }}
